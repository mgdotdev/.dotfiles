#!/bin/bash


_install_appimages() {
    pushd $HOME
    [ ! -d ./Applications ] && mkdir Applications
    nvim=$HOME/Applications/nvim
    if [ ! -f $nvim ]
    then
        cd Applications
        wget https://github.com/neovim/neovim/releases/download/v0.8.3/nvim.appimage -O nvim
        chmod +x $nvim
    fi
    popd
}

install() {
    if [ $2 = "deps" ]
    then
        if [ -x "$(command -v pacman)" ]
        then
            sudo pacman -Sy stow neovim tmux curl fd ripgrep fzf git-delta
        elif [ -x "$(command -v apt-get)" ]
        then
            _install_appimages
            sudo apt-get install stow tmux fd-find curl ripgrep fzf python3-pip
        fi
        python3 -m pip install pynvim
        git submodule update

        if [[ -z $(command -v pyenv) ]]
        then
            curl -s -S -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash
        fi

        if [[ -z $(command -v nvm)  ]]
        then
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
            nvm install node
        fi

        if [[ -z $(command -v go) ]]
        then
            go="go1.20.1.linux-amd64.tar.gz"
            wget https://go.dev/dl/$go
            rm -rf /usr/local/go && sudo tar -C /usr/local -xzf $go && rm $go
        fi

        if [[ -z $(command -v cargo) ]]
        then
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
        fi
    fi

    pushd ~/
    [ -f .bashrc ] && mv .bashrc .bashrc.old
    cd .dotfiles

    for folder in $(ls -d */ | sed "s/,/ /g")
    do
        stow $folder
    done
    popd
}

remove() {
        pushd ~/.dotfiles
        for folder in $(ls -d */ | sed "s/,/ /g")
        do
            stow -D $folder
        done
        popd
}

reinstall() {
    remove
    install
}

case $1 in
    "install") install $@ ;;
    "remove") remove $@ ;;
    "reinstall") reinstall $@ ;;
esac
